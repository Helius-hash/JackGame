class Game
{
    field Wolf wolf;
    field int score, eggDelay, eggDelayCounter;
    field boolean isOver;
    field Random random;

    field Queue eggsGroup;

    field Array GroupsHeads;

    constructor Game new()
    {
        let wolf = Wolf.new();
        let score = 0;
        let eggDelay = 15;
        let eggDelayCounter = eggDelay;
        let isOver = false;
        let random = Random.new();
        let eggsGroup = Queue.new();
        let GroupsHeads = Array.new(4);
        return this;
    }

    method void run()
    {
        var char key;
        var int position;

        do drawBackground();
        do drawScore();
        do Chicken.drawRightChicken(32 * 124 + 30);
        do Chicken.drawRightChicken(32 * 67 + 30);
        do Chicken.drawLeftChicken(32 * 124);
        do Chicken.drawLeftChicken(32 * 67);

        while (~isOver)
        {
            //ожидаю какое то время

            let key = Keyboard.keyPressed();

            //тут считываю значение с клавиатуры, надо потом настроить значения, пока они на стрелочки просто /todo
            if (key = 52){ let position = 0;}
            if (key = 53){ let position = 1;}
            if (key = 49){ let position = 2;}
            if (key = 50){ let position = 3;}

            do wolf.SetPosition(position);
            do wolf.Draw();//изменится, поменять /todo

            do Sys.wait(250);

            //проходится по группам яиц,двигая их и проверяя не упали ли какие либо яйца
            do goThrewEggs();

            //ускоряю игру, если скор стал больше 5, то яйцо спавнится каждые 7 итераций и тд, можно переместить метод в прохождение по яйцам /todo
            if (score > 10){let eggDelay = 13;}
            if (score > 19){let eggDelay = 9;}
            if (score > 26){let eggDelay = 6;}
            if (score > 36){let eggDelay = 4;}

            if (eggDelayCounter - ((eggDelayCounter/eggDelay)*eggDelay) = 0)
            {
                let eggDelayCounter = 1;
                do throwEgg();
            }
            else{let eggDelayCounter = eggDelayCounter + 1;}
        }
        do Screen.clearScreen();
        do graphicsBack.draw(32*106+13);
        return;
    }

    method void goThrewEggs()
    {
        var QueueItem item;
        var boolean fell,label;
        var Egg egg;

        let label = false;
        let item = eggsGroup.getHead();

        while (~(item = null))
        {
            let egg = item.getEgg();
            let fell = egg.changeScreenPosition();
            if (fell){let label = true;}
            let item = item.getNext();
        }

        if (label)
        {
            let egg = eggsGroup.dequeue();
            if (~(wolf.GetPosition() = egg.getPosition())){let isOver = true;}
            else
            {
                let score = score + 1;
                do drawScore();
            }
            do Screen.setColor(false);
            do egg.draw();
            do egg.dispose();
        }
        return;
    }

    method void throwEgg()
    {
        var int groupNumber;
        var boolean label;

        //тут в теории получаем число от 0 до 3, типо куда кидать
        let groupNumber = random.rand();//надо /todo

        let label = false;

        //идём по всем местам, для спавная яиц от рандомного пока не находим где нет в начале яйца, далее кидаем туда яйцо
        while (~label)
        {
            let label = tryPush(groupNumber);
            let groupNumber = groupNumber + 1 - (((groupNumber + 1) / 4) * 4);
        }
        return;
    }

    method boolean tryPush(int groupNumber)//если не может кинуть в выбранное место яйцо, возвращает false иначе true и кидает его
    {
        var Egg newEgg;
        var Egg tailEgg;

        let tailEgg = GroupsHeads[groupNumber];

        if (~(tailEgg = null))
        {
            if(tailEgg.getStage() = 0){return false;}
        }
        let newEgg = Egg.new(groupNumber);
        let GroupsHeads[groupNumber] = newEgg;
        do eggsGroup.enqueue(newEgg);

        return true;
    }

    method void drawBackground()
    {
        do Screen.setColor(true);
        do Screen.drawLine(5,100,30,100);
        do Screen.drawLine(5,99,30,99);
        do Screen.drawLine(5,98,30,98);

        do Screen.drawLine(30,100,106,130);
        do Screen.drawLine(30,99,106,129);
        do Screen.drawLine(30,98,106,128);

        do Screen.drawLine(5,157,30,157);
        do Screen.drawLine(5,156,30,156);
        do Screen.drawLine(5,155,30,155);

        do Screen.drawLine(30,157,106,187);
        do Screen.drawLine(30,156,106,186);
        do Screen.drawLine(30,155,106,185);

        do Screen.drawLine(507,100,482,100);
        do Screen.drawLine(507,99,482,99);
        do Screen.drawLine(507,98,482,98);

        do Screen.drawLine(482,100,406,130);
        do Screen.drawLine(482,99,406,129);
        do Screen.drawLine(482,98,406,128);

        do Screen.drawLine(507,157,482,157);
        do Screen.drawLine(507,156,482,156);
        do Screen.drawLine(507,155,482,155);

        do Screen.drawLine(482,157,406,187);
        do Screen.drawLine(482,156,406,186);
        do Screen.drawLine(482,155,406,185);

        return;
    }

    method void drawScore()
    {
        var int counter;
        var int ost;
        var int pos;

        let pos = 250;
        let counter = score;
        do Screen.setColor(false);
        do Screen.drawRectangle(pos-30, 10, pos+10, 19);
        do Screen.setColor(true);
        if(counter = 0){do drawNumber(0, pos);}
        while(~(counter = 0))
        {
            let ost = counter - ((counter / 10)*10);
            do drawNumber(ost, pos);
            let counter = counter / 10;
            let pos = pos - 10;
        }
        return;
    }

    //методы рисующие части цифр,вид цифр:
    // ||||||
    // ||  ||
    // ||||||
    // ||  ||
    // ||||||
    method void drawNumber(int number,int position)
    {
        if(number = 0)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 1)
        {
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
        }
        if(number = 2)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 3)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 4)
        {
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
        }
        if(number = 5)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 6)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 7)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
        }
        if(number = 8)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position, 14, position + 1, 19);//нижняя левая вертикальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        if(number = 9)
        {
            do Screen.drawRectangle(position, 10, position + 5, 11);//верхняя горизонтальная
            do Screen.drawRectangle(position, 10, position + 1, 15);//верхняя левая вертикальная
            do Screen.drawRectangle(position + 4, 10, position + 5, 15);//верхняя правая вертикальная
            do Screen.drawRectangle(position, 14, position + 5, 15);//посередине горизонтальная
            do Screen.drawRectangle(position + 4, 14, position + 5, 19);//нижняя правая вертикальная
            do Screen.drawRectangle(position, 18, position + 5, 19);//нижняя горизонтальная
        }
        return;
    }

    method void dispose()
    {
        do wolf.dispose();
        do eggsGroup.dispose();

        do Memory.deAlloc(this);
		return;
    }
}
//umpalumpa123
// инициализация объектов - волк, яйца. Игровое взаимодействие.
// игра бексонечная, сверху счет
// если фаза у яйца 6, то проверяем волк словит или нет \/
// поле проиграл ли игрок - game over \/
// поле список яиц \/
// Тим
//gfgffgfg
