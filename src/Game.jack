class Game
{
    field Wolf wolf;
    field int score, eggDelay, eggDelayCounter;
    field bool isOver;

    field Queue eggsGroupOne, eggsGroupTwo, eggsGroupThree, eggsGroupFour;

    constructor Game new()
    {
        let wolf = wolf.new();
        let score = 0;
        let eggDelay = 10;
        let eggDelayCounter = 0;
        let isOver = false;
        let eggsGroupOne = Queue.new();
        let eggsGroupTwo = Queue.new();
        let eggsGroupThree = Queue.new();
        let eggsGroupFour = Queue.new();
        return this;
    }

    method void Run()
    {
        var char key;
        var int position;

        while (~isOver)
        {
            //ожидаю какое то время
            do Sys.wait(15);

            let key = Keyboard.keyPressed();

            //тут считываю значение с клавиатуры, надо потом настроить значения, пока они на стрелочки просто
            if (key = 131){ let position = 1;}
            if (key = 133){ let position = 2;}
            if (key = 130){ let position = 3;}
            if (key = 132){ let position = 4;}

            //поворот волка можно считать
            do wolf.SetPosition(position);

            //проходится по группам яиц,двигая их и проверяя не упали ли какие либо яйца
            do this.goThrewEggGroup(eggsGroupOne,1);
            do this.goThrewEggGroup(eggsGroupTwo,2);
            do this.goThrewEggGroup(eggsGroupThree,3);
            do this.goThrewEggGroup(eggsGroupFour,4);

            //ускоряю игру, если скор стал больше 5, то яйцо спавнится каждые 7 итераций и тд, можно переместить метод в прохождение по яйцам
            if (score > 5){let eggDelay = 7;}
            if (score > 10){let eggDelay = 5;}

            if (eggDelayCounter = eggDelay)
            {
                let eggDelayCounter = 0;

                var Random random;
                let random = random.new();
                var int rand;

                //тут в теории получаем число от 1 до 4, типо куда кидать
                let rand = random.rand();//надо

                var bool label;
                let label = true;

                //идём по всем местам, для спавная яиц от рандомного пока не находим где нет в начале яйца, далее кидаем туда яйцо
                while (label)
                {
                    if (rand == 1)
                    {
                        if ((eggsGroupOne.getTail() = null))
                        {
                            var Egg newEgg;
                            let newEgg = newEgg.new(1);
                            do eggsGroupOne.enqueue(newEgg);
                            let label = false;
                        }
                        else
                        {
                            if (~(eggsGroupOne.getTail().getEgg().getStage() = 0))//название метода и не уверен можно ли несколько методов так вызывать
                            {
                                var Egg newEgg;
                                let newEgg = newEgg.new(1);
                                do eggsGroupOne.enqueue(newEgg);
                                let label = false;
                            }
                            else{let rand = 2;}
                        }
                    }
                    if (rand == 2)
                    {
                        if ((eggsGroupTwo.getTail() = null))
                        {
                            var Egg newEgg;
                            let newEgg = newEgg.new(1);
                            do eggsGroupTwo.enqueue(newEgg);
                            let label = false;
                        }
                        else
                        {
                            if (~(eggsGroupTwo.getTail().getEgg().getStage() = 0))//название метода и не уверен можно ли несколько методов так вызывать
                            {
                                var Egg newEgg;
                                let newEgg = newEgg.new(2);
                                do eggsGroupTwo.enqueue(newEgg);
                                let label = false;
                            }
                            else{let rand = 3;}
                        }
                    }
                    if (rand == 3)
                    {
                        if ((eggsGroupThree.getTail() = null))
                        {
                            var Egg newEgg;
                            let newEgg = newEgg.new(1);
                            do eggsGroupThree.enqueue(newEgg);
                            let label = false;
                        }
                        else
                        {
                            if (~(eggsGroupThree.getTail().getEgg().getStage() = 0))//название метода и не уверен можно ли несколько методов так вызывать
                            {
                                var Egg newEgg;
                                let newEgg = newEgg.new(3);
                                do eggsGroupThree.enqueue(newEgg);
                                let label = false;
                            }
                            else{let rand = 4;}
                        }
                    }
                    if (rand == 4)
                    {
                        if ((eggsGroupFour.getTail() = null))
                        {
                            var Egg newEgg;
                            let newEgg = newEgg.new(1);
                            do eggsGroupFour.enqueue(newEgg);
                            let label = false;
                        }
                        else
                        {
                            if (~(eggsGroupFour.getTail().getEgg().getStage() = 0))//название метода и не уверен можно ли несколько методов так вызывать
                            {
                                var Egg newEgg;
                                let newEgg = newEgg.new(4);
                                do eggsGroupFour.enqueue(newEgg);
                                let label = false;
                            }
                            else{let rand = 1;}
                        }
                    }
                }
            }
            else{let eggDelayCounter = eggDelayCounter + 1;}
        }

        //сделать что нибудь если умерли, там очереди обнулить


        return;
    }

    method void goThrewEggGroup(Queue eggsGroup,int dir)
    {
        var QueueItem item;
        var bool fell;
        var Egg egg;

        let fell = false;
        let item = eggsGroup.getTail(); 

        while (~(item = null))
        {
            let egg = item.getEgg();
            let fell = egg.doSmth();//доделать когда появится яйцо
            let item = item.getNext();
        {

        if (fell)
        {
            do eggsGroup.dequeue();
            if (~(wolf.GetPoistion() = dir)){let isOver = true;}//так надеюсь можно неравенства смотреть?
            else{let score = score + 1;}
        }
        return;
    }

    method void DrawBackground()
    {

    }

    method void dispose()
    {
        do wolf.dispose();
        do eggsGroupOne.dispose();
        do eggsGroupTwo.dispose();
        do eggsGroupThree.dispose();
        do eggsGroupFour.dispose();

        do Memory.deAlloc(this);
		return;
    }
}
//umpalumpa123
// инициализация объектов - волк, яйца. Игровое взаимодействие.
// игра бексонечная, сверху счет
// если фаза у яйца 6, то проверяем волк словит или нет
// поле проиграл ли игрок - game over \/
// поле список яиц \/
// Тим
//gfgffgfg