class Chicken {
    function void drawRightChicken(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 7936);
        do Memory.poke(memAddress +32, 15296);
        do Memory.poke(memAddress +64, 14560);
        do Memory.poke(memAddress +96, 12336);
        do Memory.poke(memAddress +128, -7784);
        do Memory.poke(memAddress +160, -32356);
        do Memory.poke(memAddress +192, 12);
        do Memory.poke(memAddress +224, 12);
        do Memory.poke(memAddress +256, 12);
        do Memory.poke(memAddress +288, 15);
        do Memory.poke(memAddress +320, 63);
        do Memory.poke(memAddress +352, 240);
        do Memory.poke(memAddress +384, 480);
        do Memory.poke(memAddress +416, 1984);
        do Memory.poke(memAddress +448, 1984);
        do Memory.poke(memAddress +480, 960);
        do Memory.poke(memAddress +512, 224);
        do Memory.poke(memAddress +544, 112);
        do Memory.poke(memAddress +576, 48);
        do Memory.poke(memAddress +608, 56);
        do Memory.poke(memAddress +640, 56);
        do Memory.poke(memAddress +672, 248);
        do Memory.poke(memAddress +704, 240);
        do Memory.poke(memAddress +736, 480);
        do Memory.poke(memAddress +768, 1984);
        do Memory.poke(memAddress +800, -16640);
        do Memory.poke(memAddress +832, -512);
        do Memory.poke(memAddress +864, -16384);
        do Memory.poke(memAddress +896, -16384);
        do Memory.poke(memAddress +928, -16384);
        do Memory.poke(memAddress +960, -16384);
        // column 1
        do Memory.poke(memAddress +161, 30721);
        do Memory.poke(memAddress +193, 32263);
        do Memory.poke(memAddress +225, 32526);
        do Memory.poke(memAddress +257, 25580);
        do Memory.poke(memAddress +289, -7944);
        do Memory.poke(memAddress +321, -8144);
        do Memory.poke(memAddress +353, -8192);
        do Memory.poke(memAddress +385, -16384);
        do Memory.poke(memAddress +417, -16384);
        do Memory.poke(memAddress +449, -8192);
        do Memory.poke(memAddress +481, -8192);
        do Memory.poke(memAddress +513, -8192);
        do Memory.poke(memAddress +545, -4096);
        do Memory.poke(memAddress +577, 28672);
        do Memory.poke(memAddress +609, 30720);
        do Memory.poke(memAddress +641, 15360);
        do Memory.poke(memAddress +673, 7680);
        do Memory.poke(memAddress +705, 3968);
        do Memory.poke(memAddress +737, 960);
        do Memory.poke(memAddress +769, 495);
        do Memory.poke(memAddress +801, 127);
        do Memory.poke(memAddress +833, 48);
        do Memory.poke(memAddress +865, 48);
        do Memory.poke(memAddress +897, 48);
        do Memory.poke(memAddress +929, 48);
        do Memory.poke(memAddress +961, 48);
        return;
    }

    function void drawLeftChicken(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress +160, -32738);
        do Memory.poke(memAddress +192, -8066);
        do Memory.poke(memAddress +224, 28926);
        do Memory.poke(memAddress +256, 14278);
        do Memory.poke(memAddress +288, 7943);
        do Memory.poke(memAddress +320, 3079);
        do Memory.poke(memAddress +352, 7);
        do Memory.poke(memAddress +384, 3);
        do Memory.poke(memAddress +416, 3);
        do Memory.poke(memAddress +448, 7);
        do Memory.poke(memAddress +480, 7);
        do Memory.poke(memAddress +512, 7);
        do Memory.poke(memAddress +544, 15);
        do Memory.poke(memAddress +576, 14);
        do Memory.poke(memAddress +608, 30);
        do Memory.poke(memAddress +640, 60);
        do Memory.poke(memAddress +672, 120);
        do Memory.poke(memAddress +704, 496);
        do Memory.poke(memAddress +736, 960);
        do Memory.poke(memAddress +768, -2176);
        do Memory.poke(memAddress +800, -512);
        do Memory.poke(memAddress +832, 3072);
        do Memory.poke(memAddress +864, 3072);
        do Memory.poke(memAddress +896, 3072);
        do Memory.poke(memAddress +928, 3072);
        do Memory.poke(memAddress +960, 3072);
        // column 1
        do Memory.poke(memAddress +1, 248);
        do Memory.poke(memAddress +33, 988);
        do Memory.poke(memAddress +65, 1820);
        do Memory.poke(memAddress +97, 3084);
        do Memory.poke(memAddress +129, 6535);
        do Memory.poke(memAddress +161, 14721);
        do Memory.poke(memAddress +193, 12288);
        do Memory.poke(memAddress +225, 12288);
        do Memory.poke(memAddress +257, 12288);
        do Memory.poke(memAddress +289, -4096);
        do Memory.poke(memAddress +321, -1024);
        do Memory.poke(memAddress +353, 3840);
        do Memory.poke(memAddress +385, 1920);
        do Memory.poke(memAddress +417, 992);
        do Memory.poke(memAddress +449, 992);
        do Memory.poke(memAddress +481, 960);
        do Memory.poke(memAddress +513, 1792);
        do Memory.poke(memAddress +545, 3584);
        do Memory.poke(memAddress +577, 3072);
        do Memory.poke(memAddress +609, 7168);
        do Memory.poke(memAddress +641, 7168);
        do Memory.poke(memAddress +673, 7936);
        do Memory.poke(memAddress +705, 3840);
        do Memory.poke(memAddress +737, 1920);
        do Memory.poke(memAddress +769, 992);
        do Memory.poke(memAddress +801, 253);
        do Memory.poke(memAddress +833, 127);
        do Memory.poke(memAddress +865, 3);
        do Memory.poke(memAddress +897, 3);
        do Memory.poke(memAddress +929, 3);
        do Memory.poke(memAddress +961, 3);
        return;
    }
}